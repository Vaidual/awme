using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace awme.Migrations
{
    /// <inheritdoc />
    public partial class CollarMinLenthUpdate : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 63, 131, 43, 24, 119, 59, 21, 60, 137, 236, 199, 60, 101, 87, 92, 91, 9, 136, 26, 233, 193, 177, 10, 132, 232, 244, 54, 198, 28, 139, 137, 236, 158, 162, 85, 77, 102, 24, 42, 55, 10, 124, 187, 137, 76, 99, 0, 180, 107, 156, 73, 141, 132, 71, 105, 56, 67, 56, 115, 50, 107, 11, 235, 120 }, new byte[] { 194, 237, 61, 140, 35, 97, 165, 0, 110, 93, 216, 81, 153, 195, 234, 45, 32, 148, 202, 9, 218, 107, 36, 8, 158, 56, 155, 39, 184, 115, 74, 99, 148, 49, 102, 33, 191, 195, 95, 64, 54, 8, 189, 7, 178, 110, 52, 76, 51, 228, 240, 235, 122, 182, 217, 248, 208, 128, 16, 67, 104, 181, 75, 121, 77, 88, 13, 4, 153, 111, 156, 119, 241, 225, 86, 240, 15, 99, 66, 148, 248, 181, 241, 221, 72, 255, 139, 81, 95, 25, 246, 107, 40, 9, 141, 108, 239, 141, 74, 6, 33, 164, 125, 153, 9, 180, 160, 32, 151, 44, 95, 161, 88, 233, 86, 121, 43, 73, 176, 4, 121, 87, 248, 255, 3, 226, 51, 207 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 31, 87, 185, 147, 246, 62, 239, 8, 150, 89, 28, 85, 206, 178, 94, 138, 106, 155, 84, 227, 1, 127, 82, 136, 34, 152, 36, 152, 135, 147, 201, 47, 92, 121, 139, 5, 247, 255, 199, 218, 114, 95, 168, 10, 80, 224, 169, 87, 39, 205, 55, 167, 41, 15, 59, 148, 48, 52, 22, 36, 6, 103, 54, 142 }, new byte[] { 8, 69, 151, 171, 67, 189, 143, 120, 135, 236, 43, 202, 143, 132, 103, 202, 166, 170, 135, 223, 173, 147, 94, 244, 198, 191, 98, 202, 109, 89, 192, 188, 35, 45, 147, 243, 26, 247, 175, 98, 12, 223, 253, 10, 206, 11, 217, 69, 233, 169, 85, 52, 168, 97, 79, 102, 126, 47, 241, 109, 121, 134, 212, 196, 104, 34, 155, 166, 120, 76, 116, 117, 48, 137, 30, 101, 186, 113, 181, 193, 202, 16, 26, 4, 84, 91, 197, 224, 183, 251, 132, 62, 40, 236, 168, 105, 70, 174, 86, 165, 129, 129, 80, 175, 200, 24, 29, 32, 223, 206, 103, 131, 201, 53, 145, 94, 219, 36, 205, 209, 75, 253, 19, 157, 108, 93, 179, 162 } });
        }
    }
}
